- hosts: all
  gather_facts: False
  tasks:

    - name: Create containerd directory
      file:
        path: /etc/containerd
        state: directory
        
    - name: Module configuration for network bridge
      shell: |
        # Create config files
        touch /etc/modules-load.d/k8s.conf /etc/sysctl.d/k8s.conf /etc/containerd/config.toml

        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF

        sudo modprobe overlay
        sudo modprobe br_netfilter

        # sysctl params required by setup, params persist across reboots
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

        # To use the systemd cgroup driver in /etc/containerd/config.toml with runc
        cat <<EOF | sudo tee /etc/containerd/config.toml
        [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
          ...
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
            SystemdCgroup = true
        EOF

        # Apply sysctl params without reboot
        sudo sysctl --system

    - name: Verify br_netfilter and overlay modules are loaded
      ansible.builtin.shell: |
        lsmod | grep br_netfilter
        lsmod | grep overlay
      register: modules

    - name: Print return information of modules
      ansible.builtin.debug:
        var: modules

    - name: Verify net.bridge iptables and net.ipV4_forward variables are set to "1"
      ansible.builtin.shell: |
        sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
      register: network

    - name: Print return information of network settings
      ansible.builtin.debug:
        var: network

    - name: Containerd and Container Network Interface installation
      apt:
        name: "{{ item }}" 
        update_cache: yes
        state: latest
      loop:
        - containerd
        - kubernetes-cni
 
    - name: Enable CRI support for containerd in its systemd unit file 
      lineinfile:
        path: /usr/lib/systemd/system/containerd.service 
        regexp: '#Environment="ENABLE_CRI_SANDBOXES=sandboxed"'
        line: 'Environment="ENABLE_CRI_SANDBOXES=sandboxed"'
